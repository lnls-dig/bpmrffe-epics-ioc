# BPM RFFE Database records

# Attenuation

record(ao, "$(P)$(R)Att-SP") {
    field(DESC, "Set attenuation")
    field(DTYP, "stream")
    field(PINI, "YES")
    field(DRVL, "0")
    field(DRVH, "31.5")
    field(SCAN, "Passive")
    field(OUT, "@bpmrffe.proto outAtt $(PORT)")
    field(EGU, "dB")
    field(FLNK, "$(P)$(R)Att-RB.PROC CA")
}

record(ai, "$(P)$(R)Att-RB") {
    field(DESC, "Get attenuation")
    field(DTYP, "stream")
    field(PINI, "YES")
    field(SCAN, "1 second")
    field(INP, "@bpmrffe.proto inAtt $(PORT)")
    field(EGU, "dB")
}

# Temperature measurements

record(ai, "$(P)$(R)TempAC-Mon") {
    field(DESC, "Measure temperature from AC board")
    field(DTYP, "stream")
    field(PINI, "YES")
    field(SCAN, "5 second")
    field(INP, "@bpmrffe.proto inMeasTemp(AC) $(PORT)")
    field(EGU, "oC")
}

record(ai, "$(P)$(R)TempBD-Mon") {
    field(DESC, "Measure temperature from BD board")
    field(DTYP, "stream")
    field(PINI, "YES")
    field(SCAN, "5 second")
    field(INP, "@bpmrffe.proto inMeasTemp(BD) $(PORT)")
    field(EGU, "oC")
}

# Heating controls

record(bo, "$(P)$(R)TempCtl-SP") {
    field(DESC, "Set auto temperature control")
    field(DTYP, "stream")
    field(PINI, "YES")
    field(SCAN, "Passive")
    field(VAL, "0")
    field(ZNAM, "off")
    field(ONAM, "on")
    field(OUT, "@bpmrffe.proto outTempCtl $(PORT)")
    field(FLNK, "$(P)$(R)TempCtl-RB.PROC CA")
}

record(bi, "$(P)$(R)TempCtl-RB") {
    field(DESC, "Get auto temperature control")
    field(DTYP, "stream")
    field(SCAN, "1 second")
    field(ZNAM, "off")
    field(ONAM, "on")
    field(INP, "@bpmrffe.proto inTempCtl $(PORT)")
}

# Manual heater control settings

record(dfanout, "$(P)$(R)Heater-SP") {
    field(DESC, "Set both boards' heater voltage")
    field(OMSL, "supervisory")
    field(OUTA, "$(P)$(R)HeaterAC-SP PP")
    field(OUTB, "$(P)$(R)HeaterBD-SP PP")
}

record(ao, "$(P)$(R)HeaterAC-SP") {
    field(DESC, "Set AC board heater's voltage")
    field(DTYP, "stream")
    field(PINI, "YES")
    field(DRVL, "0")
    field(DRVH, "3.3")
    field(SCAN, "Passive")
    field(OUT, "@bpmrffe.proto outHeaterVolt(AC) $(PORT)")
    field(EGU, "V")
    field(FLNK, "$(P)$(R)HeaterAC-RB.PROC CA")
}

record(ai, "$(P)$(R)HeaterAC-RB") {
    field(DESC, "Get AC board heater's voltage")
    field(DTYP, "stream")
    field(SCAN, "1 second")
    field(INP, "@bpmrffe.proto inHeaterVolt(AC) $(PORT)")
    field(EGU, "V")
}

record(ao, "$(P)$(R)HeaterBD-SP") {
    field(DESC, "Set BD board heater's voltage")
    field(DTYP, "stream")
    field(PINI, "YES")
    field(DRVL, "0")
    field(DRVH, "3.3")
    field(SCAN, "Passive")
    field(OUT, "@bpmrffe.proto outHeaterVolt(BD) $(PORT)")
    field(EGU, "V")
    field(FLNK, "$(P)$(R)HeaterBD-RB.PROC CA")
}

record(ai, "$(P)$(R)HeaterBD-RB") {
    field(DESC, "Get BD board heater's voltage")
    field(DTYP, "stream")
    field(SCAN, "1 second")
    field(INP, "@bpmrffe.proto inHeaterVolt(BD) $(PORT)")
    field(EGU, "V")
}

# PID (automatic) controller parameters

record(dfanout, "$(P)$(R)PidSp-SP") {
    field(DESC, "Set both boards' heater temp. setpoint")
    field(OMSL, "supervisory")
    field(OUTA, "$(P)$(R)PidSpAC-SP PP")
    field(OUTB, "$(P)$(R)PidSpBD-SP PP")
}

record(ao, "$(P)$(R)PidSpAC-SP") {
    field(DESC, "Set AC board heater temp. setpoint")
    field(DTYP, "stream")
    field(PINI, "YES")
    field(SCAN, "Passive")
    field(OUT, "@bpmrffe.proto outPIDTempSp(AC) $(PORT)")
    field(EGU, "oC")
    field(FLNK, "$(P)$(R)PidSpAC-RB.PROC CA")
}

record(ai, "$(P)$(R)PidSpAC-RB") {
    field(DESC, "Get AC board heater temp. setpoint")
    field(DTYP, "stream")
    field(SCAN, "1 second")
    field(INP, "@bpmrffe.proto inPIDTempSp(AC) $(PORT)")
    field(EGU, "oC")
}

record(ao, "$(P)$(R)PidSpBD-SP") {
    field(DESC, "Set BD board heater temp. setpoint")
    field(DTYP, "stream")
    field(PINI, "YES")
    field(SCAN, "Passive")
    field(OUT, "@bpmrffe.proto outPIDTempSp(BD) $(PORT)")
    field(EGU, "oC")
    field(FLNK, "$(P)$(R)PidSpBD-RB.PROC CA")
}

record(ai, "$(P)$(R)PidSpBD-RB") {
    field(DESC, "Get BD board heater temp. setpoint")
    field(DTYP, "stream")
    field(SCAN, "1 second")
    field(INP, "@bpmrffe.proto inPIDTempSp(BD) $(PORT)")
    field(EGU, "oC")
}

record(dfanout, "$(P)$(R)PidKp-SP") {
    field(DESC, "Set both boards' PID Kp constant")
    field(OMSL, "supervisory")
    field(OUTA, "$(P)$(R)PidACKp-SP PP")
    field(OUTB, "$(P)$(R)PidBDKp-SP PP")
}

record(ao, "$(P)$(R)PidACKp-SP") {
    field(DESC, "Set AC board's PID Kp constant")
    field(DTYP, "stream")
    field(PINI, "YES")
    field(DRVL, "0")
    field(DRVH, "inf")
    field(SCAN, "Passive")
    field(OUT, "@bpmrffe.proto outPIDParam(Kc,AC) $(PORT)")
    field(FLNK, "$(P)$(R)PidACKp-RB.PROC CA")
}

record(ai, "$(P)$(R)PidACKp-RB") {
    field(DESC, "Get AC board's PID Kp constant")
    field(DTYP, "stream")
    field(SCAN, "1 second")
    field(INP, "@bpmrffe.proto inPIDParam(Kc,AC) $(PORT)")
}

record(ao, "$(P)$(R)PidBDKp-SP") {
    field(DESC, "Set BD board's PID Kp constant")
    field(DTYP, "stream")
    field(PINI, "YES")
    field(DRVL, "0")
    field(DRVH, "inf")
    field(SCAN, "Passive")
    field(OUT, "@bpmrffe.proto outPIDParam(Kc,BD) $(PORT)")
    field(FLNK, "$(P)$(R)PidBDKp-RB.PROC CA")
}

record(ai, "$(P)$(R)PidBDKp-RB") {
    field(DESC, "Get BD board's PID Kp constant")
    field(DTYP, "stream")
    field(SCAN, "1 second")
    field(INP, "@bpmrffe.proto inPIDParam(Kc,BD) $(PORT)")
}

record(dfanout, "$(P)$(R)PidTi-SP") {
    field(DESC, "Set both boards' PID Ti constant")
    field(OMSL, "supervisory")
    field(OUTA, "$(P)$(R)PidACTi-SP PP")
    field(OUTB, "$(P)$(R)PidBDTi-SP PP")
}

record(ao, "$(P)$(R)PidACTi-SP") {
    field(DESC, "Set AC board's PID Ti constant")
    field(DTYP, "stream")
    field(PINI, "YES")
    field(DRVL, "0")
    field(DRVH, "inf")
    field(SCAN, "Passive")
    field(OUT, "@bpmrffe.proto outPIDParam(Ti,AC) $(PORT)")
    field(FLNK, "$(P)$(R)PidACTi-RB.PROC CA")
}

record(ai, "$(P)$(R)PidACTi-RB") {
    field(DESC, "Get AC board's PID Ti constant")
    field(DTYP, "stream")
    field(SCAN, "1 second")
    field(INP, "@bpmrffe.proto inPIDParam(Ti,AC) $(PORT)")
}

record(ao, "$(P)$(R)PidBDTi-SP") {
    field(DESC, "Set BD board's PID Ti constant")
    field(DTYP, "stream")
    field(PINI, "YES")
    field(DRVL, "0")
    field(DRVH, "inf")
    field(SCAN, "Passive")
    field(OUT, "@bpmrffe.proto outPIDParam(Ti,BD) $(PORT)")
    field(FLNK, "$(P)$(R)PidBDTi-RB.PROC CA")
}

record(ai, "$(P)$(R)PidBDTi-RB") {
    field(DESC, "Get BD board's PID Ti constant")
    field(DTYP, "stream")
    field(SCAN, "1 second")
    field(INP, "@bpmrffe.proto inPIDParam(Ti,BD) $(PORT)")
}

record(dfanout, "$(P)$(R)PidTd-SP") {
    field(DESC, "Set both boards' PID Td constant")
    field(OMSL, "supervisory")
    field(OUTA, "$(P)$(R)PidACTd-SP PP")
    field(OUTB, "$(P)$(R)PidBDTd-SP PP")
}

record(ao, "$(P)$(R)PidACTd-SP") {
    field(DESC, "Set AC board's PID Td constant")
    field(DTYP, "stream")
    field(PINI, "YES")
    field(DRVL, "0")
    field(DRVH, "inf")
    field(SCAN, "Passive")
    field(OUT, "@bpmrffe.proto outPIDParam(Td,AC) $(PORT)")
    field(FLNK, "$(P)$(R)PidACTd-RB.PROC CA")
}

record(ai, "$(P)$(R)PidACTd-RB") {
    field(DESC, "Get AC board's PID Td constant")
    field(DTYP, "stream")
    field(SCAN, "1 second")
    field(INP, "@bpmrffe.proto inPIDParam(Td,AC) $(PORT)")
}

record(ao, "$(P)$(R)PidBDTd-SP") {
    field(DESC, "Set BD board's PID Td constant")
    field(DTYP, "stream")
    field(DRVL, "0")
    field(DRVH, "inf")
    field(PINI, "YES")
    field(SCAN, "Passive")
    field(OUT, "@bpmrffe.proto outPIDParam(Td,BD) $(PORT)")
    field(FLNK, "$(P)$(R)PidBDTd-RB.PROC CA")
}

record(ai, "$(P)$(R)PidBDTd-RB") {
    field(DESC, "Get BD board's PID Td constant")
    field(DTYP, "stream")
    field(SCAN, "1 second")
    field(INP, "@bpmrffe.proto inPIDParam(Td,BD) $(PORT)")
}

# Operations

record(waveform, "$(P)$(R)FirmwareVer-Cte") {
    field(DESC, "Get firmware version")
    field(DTYP, "stream")
    field(PINI, "YES")
    field(FTVL, "CHAR")
    field(NELM, "141")
    field(INP, "@bpmrffe.proto getVersion $(PORT)")
}

record(bo, "$(P)$(R)Rst-SP") {
    field(DESC, "Reset firmware")
    field(SCAN, "Passive")
    field(ONAM, "reset")
    field(HIGH, "1")
    field(FLNK, "$(P)$(R)Rst")
}

record(calcout, "$(P)$(R)Rst") {
    field(DESC, "Send reset command to device")
    field(DTYP, "stream")
    field(CALC, "A")
    field(INPA, "$(P)$(R)Rst-SP")
    # Output only when Rst-SP is one (i.e. CALC is non-zero)
    field(OOPT, "When Non-zero")
    field(OUT, "@bpmrffe.proto Rst $(PORT)")
}
